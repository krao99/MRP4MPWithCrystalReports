<UserControl x:Class="MRP4ME.View.LocateBOM"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" FontFamily="Verdana" BorderThickness="1" Height="560" Width="Auto" BorderBrush="Black" >
    <UserControl.Resources>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid Background="#FFE2FEE2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ToggleButton IsChecked="{Binding Path=IsExpanded, 
                                    RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                                    Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="30" />
                                            <Setter Property="FrameworkElement.Height" Value="30" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="30" Height="30">
                                                            <Path Fill="#FFE2A023" Stroke="#FFE2A023" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" 
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Control.Padding}" 
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header"
                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                        ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                        ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                        ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="#FF0F9D58" />
                                <Setter Property="TextElement.Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="CornerRadius" Value="1" />
        </Style>
    </UserControl.Resources>
    <StackPanel x:Name="stpOuter" Background="Transparent" Orientation="Vertical">
        <Grid>
            <Grid.RowDefinitions>

                <RowDefinition Height="32" MinHeight="32"></RowDefinition>
                <RowDefinition Height="32"></RowDefinition>
                <RowDefinition Height="32"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="40"></RowDefinition>

            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Locate an existing BoM" HorizontalAlignment="Left" Height="30" Width="338" FontWeight="Bold" 
                   Margin="0,0,0,2" FontSize="14" />

            <Label Grid.Row="1" Content="Please select the item code from the dropdown list" HorizontalAlignment="Left" Height="30"  FontWeight="Bold" 
                   Margin="0,0,0,2" FontSize="11" Width="329" />

            <StackPanel Grid.Row="2" Orientation="Horizontal">

                <Label Content="Item Code: " HorizontalAlignment="Left" Height="30" Width="108" FontWeight="Bold"   />
                
                <ComboBox Height="30" Margin="0,0,0,0" VerticalAlignment="Top" Width="247" IsEditable="True"
                	ItemsSource="{Binding Itemcodes, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" 
                	SelectedValue="{Binding ItemCode, Mode=TwoWay}"
                    IsSynchronizedWithCurrentItem="True" />
                
                <Button Content="Locate BOM"  HorizontalAlignment="Left" Height="30"
                	VerticalAlignment="Top" Width="109" Background="#FFE2A023" Command="{Binding LocateBOMCommand}" 
                	FontWeight="Bold"   Margin="10,0,0,0"   />
            </StackPanel>

            <Grid Grid.Row="3" Margin="0,0,0,30" Background="#FFE2FEE2" >
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" PanningMode="VerticalOnly">
                    <StackPanel Background="Transparent" >
                        <Grid  Margin="0,0,0,0" Background="#FFE2A023" Width="1300">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="80"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0"  Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="1" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="2" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="3" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="4" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="5" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="6" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="7" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="8" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="9" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="10" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="11" Stroke="Black" Fill="Transparent" />
                            <Rectangle Grid.Column="12" Stroke="Black" Fill="Transparent" />

                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Type" Grid.Column="0" />
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Component" Grid.Column="1"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Component Description" Grid.Column="2"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Quantity Per" Grid.Column="3"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="U/M" Grid.Column="4"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Effective from" Grid.Column="5"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Effective through" Grid.Column="6"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="ECO" Grid.Column="7"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Cost U/M" Grid.Column="8"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="BOM Cost" Grid.Column="9"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Scrap %" Grid.Column="10"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Scrap Cost" Grid.Column="11"/>
                            <TextBlock TextWrapping="Wrap" Margin="5" Text="Ext. Cost" Grid.Column="12"/>
                        </Grid>

                        <TreeView Height="486" HorizontalAlignment="Left" Margin="0,0,0,11" x:Name="treeView1" 
            		                VerticalAlignment="Top"  
            		                ItemsSource="{Binding BOMItems}" Background="Transparent" BorderThickness="0">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding rsParentChild}">
                                    <Border Background="#FFE2FEE2" CornerRadius="2" Margin="1"  BorderBrush="#FFE2A023" BorderThickness="1">
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="150"/>
                                                <ColumnDefinition Width="150"/>
                                                <ColumnDefinition Width="250"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="120"/>
                                                <ColumnDefinition Width="120"/>
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="60"/>
                                                <ColumnDefinition Width="80"/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="0" Text="{Binding type}" />
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1" Text="{Binding component}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="2" Text="{Binding comp_desc}" />
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="3" Text="{Binding quantity_per}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="4" Text="{Binding uom}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="5" Text="{Binding eff_from, StringFormat={}{0:MM/dd/yyyy}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="6" Text="{Binding eff_through, StringFormat={}{0:MM/dd/yyyy}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="7" Text="{Binding ECO}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="8" Text="{Binding cost_uom, StringFormat={}{0:#0.00######}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="9" Text="{Binding bom_cost, StringFormat={}{0:#0.00######}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="10" Text="{Binding scrap_percent, StringFormat={}{0:#0.00######}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="11" Text="{Binding scrap_cost, StringFormat={}{0:#0.00######}}"/>
                                            <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="12" Text="{Binding extended_cost, StringFormat={}{0:#0.00######}}"/>
                                        </Grid>
                                    </Border>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </StackPanel>
</UserControl>
