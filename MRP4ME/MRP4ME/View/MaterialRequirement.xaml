<UserControl x:Class="MRP4ME.View.MaterialRequirement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" FontFamily="Verdana" BorderThickness="1" Height="560" Width="1000">
    <UserControl.Resources>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid Background="#FFE2FEE2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                        -->
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, 
                                    RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                                    Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="30" />
                                            <Setter Property="FrameworkElement.Height" Value="30" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="30" Height="30">
                                                            <Path Fill="#FFE2A023" Stroke="#FFE2A023" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" 
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Control.Padding}" 
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header"
                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                        ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                        ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                        ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="#FF0F9D58" />
                                <Setter Property="TextElement.Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel x:Name="stpOuter" Background="Transparent" >

        <StackPanel Background="Transparent" Orientation="Horizontal">
            <Label Content="Material Requirements" HorizontalAlignment="Left" Height="30" Width="352" FontWeight="Bold"/>

        </StackPanel>


        <Grid Margin="0,0,0,30" Background="#FFE2FEE2" >
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" PanningMode="VerticalOnly">
                <StackPanel Background="Transparent" >

                    <TreeView Height="486" HorizontalAlignment="Left" Margin="0,0,0,11" x:Name="treeView1" 
            		                VerticalAlignment="Top" Width="1000"  
            		                ItemsSource="{Binding Salesorders}" Background="Transparent" BorderThickness="0">

        
                        <TreeView.ItemTemplate>

                            <HierarchicalDataTemplate ItemsSource="{Binding rsParentChild}">
                                <Border Background="#FFE2FEE2" CornerRadius="2" Margin="1"  BorderBrush="#FF0F9D58" BorderThickness="1">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition Width="90"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding customer_name}" Grid.Column="0" />
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding required_date, StringFormat={}{0:MM/dd/yyyy}}" Grid.Column="1"/>
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding so_number}" Grid.Column="2"/>
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding item_code}" Grid.Column="3"/>
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding item_id}" Grid.Column="4"/>
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding parent_item_id}" Grid.Column="5"/>
                                        <TextBlock TextWrapping="Wrap" Margin="5" Text="{Binding unit_cost, StringFormat={}{0:#0.00######}}" Grid.Column="6"/>
                                        <Button Grid.Column="7"  Width="30" Height="30" Command="{Binding Path=DataContext.DeleteSOCommand, 
                                                    RelativeSource= {RelativeSource FindAncestor,
                                                    AncestorType={x:Type DataGrid}}}"  CommandParameter="{Binding Path=so_number}">
                                            <StackPanel>
                                                <Image Source="/MRP4ME;component/Images/delete_icon.jpg" />
                                            </StackPanel>
                                        </Button>

                                    </Grid>
                                </Border>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>

                    <StackPanel Orientation="Horizontal" >
                        <Button x:Name="btnPrintBOM" Content="Print"  HorizontalAlignment="Left" Height="30"
                		VerticalAlignment="Top" Width="100" Background="#FFE2A023" Command="{Binding DataContext.PrintBOMCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type HeaderedContentControl}}}" 
                		Margin="150,0,0,0" FontWeight="Bold" RenderTransformOrigin="1.49,0.4"/>
                        <Button x:Name="btnCancelSO" Content="Cancel"  HorizontalAlignment="Left" Height="30"
                    	VerticalAlignment="Top" Width="100" Background="#FFE2A023" Command="{Binding CloseCommand}" 
                    	FontWeight="Bold" RenderTransformOrigin="1.49,0.4" Margin="100,0,10,0"/>

                    </StackPanel>

                </StackPanel>
            </ScrollViewer>
        </Grid>

    </StackPanel>
</UserControl>
